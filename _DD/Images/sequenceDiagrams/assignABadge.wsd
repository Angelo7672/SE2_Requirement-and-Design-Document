@startuml

autonumber

actor Student as U
participant emailProvider as EP
participant TournamentManager as TM
participant BadgeManager as BM
participant EvaluationManager as EM

participant AccountManager as AM


participant RMPManager as RMP
participant NotificationManager as NM
participant DBMSManager as DB

activate DB
activate TM
activate EP
TM -> TM:  
note right 
End of tournament event
end note
loop for each Badge
    TM -> BM: evaluateCriteria(badge: BadgeData, tournament: TournamentData): Void
    deactivate TM
    activate BM
    BM -> EM: evaluateCriterium(Crterium: criterium, tournament: TournamentData): List<String>
    activate EM
    alt if necessary, for each Team repo
        EM -> RMP: pull(repoLink: String): Array<File>
        activate RMP
        RMP --> EM: File Code
        deactivate RMP
    end
    EM --> BM: eligible Student RMP Handles
    deactivate EM
    alt if eligible Student RMP handle list is not empty
        loop for each eligible student
            BM -> AM: assignBadge(Student: studentData, Badge: BadgeData): Boolean
            activate AM
            AM -> DB: query(query: String, args: List<String>): QueryResult
            DB --> AM: Success
            AM --> BM: True (Badge assignment registered)
            deactivate AM
            BM -> NM: sendNotification(email: String, text: String): Void
            activate NM
            NM -> EP: send email
            deactivate NM
            EP -> U: receive email
        end
    end
    deactivate BM
end
deactivate TM
deactivate DB
deactivate EP

@enduml
