@startuml

autonumber
actor Educator as U
participant First_Firewall as FF
participant WebServer as WS
participant Second_Firewall as SF
participant Application_Server as AS
participant Microservices_Dispatcher as MD
participant BadgeManager as BM
entity logInManagerInterface as LMI
participant LogInManager as LM

activate U
activate FF
activate WS
activate SF
activate AS
U-->FF: createABadge(Json(Name, Image, criterias, email))
FF-->WS: analizer(socket, Json): Json
WS-->SF: verifyLoggedClient(socket)
SF-->AS: analizer(socket, Json): Json
AS-->MD: parser(Json): response
activate MD
MD-->LMI: logInManager.isLogged(email)
activate LMI
activate LM
LMI-->LM: isLogged(email)
deactivate LMI
alt if Badge is created
    LM-->MD: True: the User is logged properly and he/she is an Educator
    MD-->BM: MicroserviceDispatcher.createBadge(Json(Name, Image, criterias, email))
    activate BM
    BM-->MD: True: Badge is created
    deactivate BM
    MD-->AS: Badge created
    AS-->WS: Json(Badge created)
    WS-->U: Badge successfully created
else  data provided are incorrect or Badge already exists
    LM-->MD: True: the User is logged properly and it is an Educator
    MD-->AS: Badge not created, Badge already exists
    AS-->WS: Json(Badge NOT created)
    WS-->U: Badge NOT created
else User is not an Educator or is not logged
    LM-->MD: False: the User is not logged properly or he/she is not an Educator
    deactivate LM
    MD-->AS: Badge NOT created, User NOT logged properly 
    deactivate MD
    AS-->WS: Json(Badge NOT created)
    WS-->U: Badge NOT created
end
deactivate U
deactivate FF
deactivate WS
deactivate SF
deactivate AS
@enduml