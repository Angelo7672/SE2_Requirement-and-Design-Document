@startuml

autonumber
actor User as U
participant First_Firewall as FF
participant WebServer as WS
participant Second_Firewall as SF
participant Application_Server as AS
participant Microservices_Dispatcher as MD
entity logInManagerInterface as LMI
participant LogInManager as LM
entity searchManagerInterface as SMI
participant searchManager as SM

activate U
activate FF
activate WS
activate SF
activate AS
U --> FF: Json(searchUser(parameters))
FF-->WS: analizer(socket, Json): Json
WS-->SF: verifyLoggedClient(socket)
SF-->AS: analizer(socket, Json): Json
AS-->MD: parser(Json): response
activate MD
MD-->LMI: logInManager.isLogged(myemail)
activate LMI
LMI-->LM: isLogged(myemail)
note right
    If is not isLogged
    it would be required a log in procedure
end note
deactivate LMI
activate LM
LM-->MD: True: User is properly logged
deactivate LM
MD-->SMI: MicroservicesDispatcher.searchUser(parameters)
activate SMI
SMI-->SM: searchUser(parameters)
note right
    parameters can include
    email, name, surname, repo
    functions overrides are provided
end note 
deactivate SMI
activate SM
SM-->MD: List<AccountManager>
deactivate SM
MD-->AS: Json(List<AccountManager>.getInfo)
deactivate MD
AS-->WS: Json(List<AccountManager>.getInfo)
WS-->U: Infos of accounts found
@enduml