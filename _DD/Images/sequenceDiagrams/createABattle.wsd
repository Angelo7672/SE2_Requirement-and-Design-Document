@startuml

autonumber
actor Educator as U
participant First_Firewall as FF
participant WebServer as WS
participant Second_Firewall as SF
participant Application_Server as AS
participant Microservices_Dispatcher as MD
participant BattleManager as BM
entity logInManagerInterface as LMI
participant LogInManager as LM

activate U
activate FF
activate WS
activate SF
activate AS
U-->FF: createABattle(Json(Name, overview, RMP, evaluationMode, email))
FF-->WS: analizer(socket, Json): Json
WS-->SF: verifyLoggedClient(socket)
SF-->AS: analizer(socket, Json): Json
AS-->MD: parser(Json): response
activate MD
MD-->LMI: logInManager.isLogged(email)
activate LMI
activate LM
LMI-->LM: isLogged(email)
deactivate LMI
alt if Battle is created
    LM-->MD: True: the User is logged properly and he/she is an Educator
    MD-->BM: MicroserviceDispatcher.createBattle(Name,overview, RMP, evaluationMode, email)
    activate BM
    BM-->MD: True: Battle is created
    deactivate BM
    MD-->AS: Battle created
    AS-->WS: Json(Battle created)
    WS-->U: Battle successfully created
else  data provided are incorrect or Battle already exists
    LM-->MD: True: the User is logged properly and it is an Educator
    MD-->AS: Battle not created, Battle already exists
    AS-->WS: Json(Battle NOT created)
    WS-->U: Battle NOT created
else User is not an Educator or is not logged
    LM-->MD: False: the User is not logged properly or he/she is not an Educator
    deactivate LM
    MD-->AS: Battle NOT created, User NOT logged properly 
    deactivate MD
    AS-->WS: Json(Battle NOT created)
    WS-->U: Battle NOT created
end
deactivate U
deactivate FF
deactivate WS
deactivate SF
deactivate AS
@enduml