@startuml

autonumber
actor Student as U
participant First_Firewall as FF
participant WebServer as WS
participant Second_Firewall as SF
participant Application_Server as AS
participant Microservices_Dispatcher as MD
entity battleManagerInterface as BMI
participant BattleManager as BM
entity logInManagerInterface as LMI
participant LogInManager as LM

activate U
activate FF
activate WS
activate SF
activate AS
U-->FF: joinABattle(Json(email, Team))
FF-->WS: analizer(socket, Json): Json
WS-->SF: verifyLoggedClient(socket)
SF-->AS: analizer(socket, Json): Json
AS-->MD: parser(Json): response
activate MD
MD-->LMI: logInManager.isLogged(email)
activate LMI
activate LM
LMI-->LM: isLogged(email)
deactivate LMI
alt if Battle joined successful
    LM-->MD: True: the User is logged properly and he/she is an Educator
    activate BMI
    MD-->BMI: BattleManager.joinBattle(email, Team)
    BMI-->BM: joinBattle(email, Team)
    deactivate BMI
    activate BM
    BM-->MD: True: Battle is joined
    deactivate BM
    MD-->AS: Battle joined
    AS-->WS: Json(Battle joined)
    WS-->U: Battle successfully joined
else  Battle already joined or Team does not exists
    LM-->MD: True: the User is logged properly and it is a Student
    MD-->BMI: BattleManager.joinBattle(email, Team)
    BMI-->BM: joinBattle(email, Team)
    deactivate BMI
    activate BM
    BM-->MD: False: Battle is already joined/Team doen not exists
    deactivate BM
    MD-->AS: Battle already joined/Team doen not exists
    AS-->WS: Json(Battle already joined/Team doen not exists)
    WS-->U: Battle already joined/Team doen not exists
else User is not a Student or is not logged
    LM-->MD: False: the User is not logged properly or he/she is not an Educator
    deactivate LM
    MD-->AS: Battle NOT joined, User NOT logged properly 
    deactivate MD
    AS-->WS: Json(Battle NOT joined)
    WS-->U: Battle NOT joined
end
deactivate U
deactivate FF
deactivate WS
deactivate SF
deactivate AS
@enduml