@startuml

autonumber
actor Student as S
participant CKBWebApp as A
entity CKBPlatform as P
participant EmailProvider as E

activate S
S->S: scroll available Tournaments in Student's homepage
note right
    the home page includes Tournament list and
    the web app caches Tournaments list
end note
S->A: clicks the "See more" Button
activate A
S<---A: more Tournaments displayed
deactivate A
S->A: clicks on a Tournament displayed to see details
activate A
A->P: requires more information about that specific Tournament
activate P
A<---P: Tournament's infos
deactivate P
S<---A: Tournament's info displayed
deactivate A

alt if not interested
    S->A: clicks again on Tournament to hide details
    activate A
    S<---A: hide Tournament details
    deactivate A
else if interested, Subscription deadline is not passed and the Student is not already subscribed
    S->A: insert the Team's name and\nclicks on "subscribe" button
    activate A
    A->P: subscription request
    activate P
    P->P: check if the Team's name is already taken
    alt if the Team's name is not already taken
        P->P: creates Team for that Student
        P->E: sends confirmation Email to the Student
        activate E
        A<---P: gives feedback of effective subscription
        deactivate P
        E->S: delivers Email to the Student
        deactivate E
        S<---A: gives visual feedback of effective subscription
        deactivate A
        deactivate S
    else if the Team's name is already taken
        P->A: gives feedback of Team's name already taken
        activate A
        A->S: gives feedback of Team's name already taken
        deactivate P
        deactivate A
    end
end
@enduml